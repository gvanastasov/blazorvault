@using System.ComponentModel.DataAnnotations;
<BVHeading Large class="text-right">@Title</BVHeading>
@Description
<hr>
@if (Parameterss != null)
{
    <ComponentSection Title="Parameters">
        <table class="documentation-table">
            <thead>
                <tr>
                    <th>@nameof(DisplayAttribute.Name)</th>
                    <th>@nameof(DisplayAttribute.Description)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Parameterss)
                {
                    <tr>
                        <td class="documentation-text--primary">@item.Key</td>
                        <td>@item.Value</td>
                    </tr>
                }
            </tbody>
        </table>
    </ComponentSection>
}
@if (Functionality != null)
{
    <ComponentSection Title="Functionality">
        @Functionality
    </ComponentSection>
}
@if (Examples != null)
{
    <ComponentSection Title="Examples">
        @Examples
    </ComponentSection>
}
@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment Description { get; set; }

    [Parameter]
    public RenderFragment Parameters { get; set; }

    [Parameter]
    public RenderFragment Functionality { get; set; }

    [Parameter]
    public RenderFragment Examples { get; set; }

    [Parameter]
    public Type Type { get; set; }

    private Dictionary<string, string> Parameterss { get; set; }

    protected override void OnParametersSet()
    {
        if (this.Type != null)
        {
            this.Parameterss = new Dictionary<string, string>();
            var properties = this.Type.GetProperties();

            foreach (var prop in properties)
            {
                var display = prop
                    .GetCustomAttributes(typeof(DisplayAttribute), true)
                    .FirstOrDefault() as DisplayAttribute;

                if (display != null)
                {
                    this.Parameterss.Add(display.Name, display.Description);
                }
            }
        }
    }
}
